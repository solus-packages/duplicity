diff -urpN duplicity-0.7.18/duplicity/util.py duplicity-0.7.18-p3/duplicity/util.py
--- duplicity-0.7.18/duplicity/util.py	2017-11-23 07:07:34.000000000 -0600
+++ duplicity-0.7.18-p3/duplicity/util.py	2018-10-15 10:13:30.988730767 -0500
@@ -76,7 +76,10 @@ def uexc(e):
     # non-ascii will cause a UnicodeDecodeError when implicitly decoding to
     # unicode.  So we decode manually, using the filesystem encoding.
     # 99.99% of the time, this will be a fine encoding to use.
-    return ufn(unicode(e).encode('utf-8'))
+    m = e.message
+    if isinstance(m, unicode):
+        m = m.encode('utf-8')
+    return ufn(m)
 
 
 def maybe_ignore_errors(fn):
diff -urpN duplicity-0.7.18/testing/unit/test_exc.py duplicity-0.7.18-p3/testing/unit/test_exc.py
--- duplicity-0.7.18/testing/unit/test_exc.py	1969-12-31 18:00:00.000000000 -0600
+++ duplicity-0.7.18-p3/testing/unit/test_exc.py	2018-10-15 10:13:17.619683596 -0500
@@ -0,0 +1,36 @@
+#
+# This file is part of duplicity.
+#
+# Duplicity is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by the
+# Free Software Foundation; either version 2 of the License, or (at your
+# option) any later version.
+#
+# Duplicity is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with duplicity; if not, write to the Free Software Foundation,
+# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+
+import unittest
+
+import duplicity
+
+class TestExc(unittest.TestCase):
+
+    def test_uexc(self):
+
+        e = Exception('test')
+        msg = duplicity.util.uexc(e)
+        self.assertEqual(msg, 'test')
+
+        e = Exception(b'\xe3\x83\x86\xe3\x82\xb9\xe3\x83\x88')
+        msg = duplicity.util.uexc(e)
+        self.assertEqual(msg, u'\u30c6\u30b9\u30c8')
+
+
+if __name__ == '__main__':
+    unittest.main()
